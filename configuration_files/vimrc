set nocompatible              " be iMproved, required
filetype off                  " required

" Vim Plug
call plug#begin('~/.vim/bundle')
Plug 'scrooloose/nerdtree'
Plug 'kien/ctrlp.vim'
Plug 'mileszs/ack.vim'

Plug 'chriskempson/base16-vim'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'airblade/vim-gitgutter'

Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-commentary'
Plug 'suy/vim-context-commentstring'

Plug 'slim-template/vim-slim'
call plug#end()

" use html filetype with ejs
au BufNewFile,BufRead *.ejs setfiletype html

" use JSON filetype with JSON-LD
au BufNewFile,BufRead *.jsonld setfiletype json

" Set <Leader>
let mapleader=","

" Wrap too long lines
set wrap

" Tabs are 2 characters
set tabstop=2

" (Auto)indent uses 2 characters
set shiftwidth=2

" spaces instead of tabs
set expandtab

" guess indentation
set autoindent

" Expand the command line using tab
set wildchar=<Tab>

" show line numbers
set number

" Fold using markers {{{
" like this
" }}}
set foldmethod=marker

" powerful backspaces
set backspace=indent,eol,start

" highlight the searchterms
set hlsearch

" jump to the matches while typing
set incsearch

" ignore case while searching
set ignorecase

" don't wrap words
set textwidth=0

" history
set history=50

" 1000 undo levels
set undolevels=1000

" show a ruler
set ruler

" show partial commands
set showcmd

" show matching braces
set showmatch

" write before hiding a buffer
set autowrite

" allows hidden buffers to stay unsaved, but we do not want this, so comment
" it out:
set hidden

" hide current line of each minimized file
set wmh=0

" use the mouse
set ttyfast
set mouse=a
set ttymouse=xterm2

" For completion menu: always show the menu, insert longest match
set completeopt=menuone,longest

" leave a 5 line buffer when scrolling
set scrolloff=5

" set cursor and gutter colors
set cursorline
set cursorcolumn
set lazyredraw " hack to let curosrline bg not redraw every scroll

if filereadable(expand("~/.vimrc_background"))
  let base16colorspace=256
  source ~/.vimrc_background
endif

" vim airline settings
set laststatus=2
" remove airline arrow separators
let g:airline_left_sep=''
let g:airline_right_sep=''

" Disable colorscheme background, so defaults to terminal
let g:gitgutter_override_sign_column_highlight=0
highlight Normal ctermbg=none guibg=none
highlight SignColumn ctermbg=none guibg=none
highlight LineNr ctermbg=none guibg=none

" highlight extra whitespace in red
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/

" hide line cursor when focus changes
augroup CursorLine
    au!
    au VimEnter * setlocal cursorline
    au WinEnter * setlocal cursorline
    au BufWinEnter * setlocal cursorline
    au WinLeave * setlocal nocursorline
augroup END

" hide vertical cursor when focus changes
augroup CursorColumn
    au!
    au VimEnter * setlocal cursorcolumn
    au WinEnter * setlocal cursorcolumn
    au BufWinEnter * setlocal cursorcolumn
    au WinLeave * setlocal nocursorcolumn
augroup END

" When editing a file, always jump to the last known cursor position.
" Don't do it when the position is invalid or when inside an event handler
" (happens when dropping a file on gvim).
autocmd BufReadPost *
  \ if line("'\"") > 0 && line("'\"") <= line("$") |
  \   exe "normal g`\"" |
  \ endif


" don't deselect visual block after indent/unindent
vnoremap < <gv
vnoremap > >gv

" Remove highlighted words with spacebar
nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>

" Cycle through files in buffer
nnoremap <Leader>b :bn<CR>
nnoremap <Leader>B :bp<CR>

" Toggle relative line numbering
nnoremap <Leader>n :set relativenumber!<CR>

" Ignore certain filetypes and directories in VIM
set wildignore+=*.so,*.swp
set wildignore+=*/tmp/*,*/log/*,
set wildignore+=*/source_maps/*
set wildignore+=.git,.gitkeep,.keep
set wildignore+=*/node_modules/*
set wildignore+=*/vendor/ruby/*,*/vendor/assets/*
set wildignore+=.coverage
set wildignore+=*.png,*.jpg,*.jpeg,*.gif,*.pdf,*.dmg,*.zip

" ===============
" PLUGIN SETTINGS
" ===============

" NERDTree
map <C-n> :NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
autocmd vimenter * if !argc() | NERDTree | endif
let NERDTreeShowHidden=1

 " Ripgrep for CTRLP and Ack
 if executable('rg')
   set grepprg=rg\ --color=never
   let g:ctrlp_user_command = 'rg %s --files --color=never --glob ""'
   let g:ctrlp_use_caching = 0

   let g:ackprg = 'rg -S --vimgrep --no-heading'
 endif

" Multi-Cursor settings
let g:multi_cursor_use_default_mapping=0
let g:multi_cursor_next_key='<C-g>'
let g:multi_cursor_prev_key='<C-h>'
let g:multi_cursor_skip_key='<C-x>'
let g:multi_cursor_quit_key='<Esc>'
